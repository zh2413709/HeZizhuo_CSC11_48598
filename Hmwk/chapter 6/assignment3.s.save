	.global _start
_start:
	mov r0, #0
	mov r2, #222
	mov r3, #5
	mov r4, #0
	mov r5, #0
	mov r6, #0
	mov r7, #0
	mov r8, #10
	mov r9, #0
	mov r1, r2
compare:
	cmp r1, r3
	beq case_equal
case_different:
	bmi case_negative
case_positive:
	cmp r6, #1
	bgt scale
	b compare_flag
case_negative:
	mov r1, r2
	b compare_flag
case_equal:
	add r0, r0, #1
scale:
	mov r6, #1
	mul r7, r3, r6
	mul r9, r7, r8
checking_scale:
	cmp r1, r9
	bgt increase_scale
			mul r6, r6, r8
			mul r7, r3, r6
			mul r9, r7, r8
			b checking_scale
add_scale:
	add r0, r0, r6
	sub r1, r1, r7
	cmp r1, r7
	bgt add_scale
	b compare_positive	

compare_flag:
	cmp r4, #0
	beq end
	bne swap
swap:
	mov r0, r1
end:
	mov r7, #1
	swi 0
	
	
